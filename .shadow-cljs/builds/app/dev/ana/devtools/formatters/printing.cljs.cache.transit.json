["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.helpers');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___41755 = arguments.length;\nvar i__4790__auto___41756 = (0);\nwhile(true){\nif((i__4790__auto___41756 < len__4789__auto___41755)){\nargs__4795__auto__.push((arguments[i__4790__auto___41756]));\n\nvar G__41757 = (i__4790__auto___41756 + (1));\ni__4790__auto___41756 = G__41757;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((2) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4796__auto__);\n});\n\n(devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(''),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n}));\n\n(devtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq41689){\nvar G__41690 = cljs.core.first(seq41689);\nvar seq41689__$1 = cljs.core.next(seq41689);\nvar G__41691 = cljs.core.first(seq41689__$1);\nvar seq41689__$2 = cljs.core.next(seq41689__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41690,G__41691,seq41689__$2);\n}));\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__4185__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(devtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null)));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n}));\n\n(devtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n}));\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$type = true);\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\");\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"devtools.formatters.printing/TemplateWriter\");\n}));\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5733__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar tag = temp__5733__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_(((cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group)))?(function (){var or__4185__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n})():false))){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__41700_SHARP_){\nreturn (!((cljs.core.meta(p1__41700_SHARP_) == null)));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__41734 = opts;\nvar map__41734__$1 = (((((!((map__41734 == null))))?(((((map__41734.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41734.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41734):map__41734);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41734__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__4185__auto__ = (function (){try{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e41740){var _e__41216__auto__ = e41740;\nreturn false;\n}})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\ntry{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e41744){var _e__41216__auto__ = e41744;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5733__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar atomic_markup = temp__5733__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR__orig_val__41748 = devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__41749 = devtools.formatters.state.get_current_state();\n(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__41749);\n\ntry{var map__41750 = opts;\nvar map__41750__$1 = (((((!((map__41750 == null))))?(((((map__41750.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41750.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41750):map__41750);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41750__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__41748);\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});\nvar temp__5733__auto___41788 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5733__auto___41788)){\nvar managed_print_level_41789 = temp__5733__auto___41788;\nvar _STAR_print_level_STAR__orig_val__41753_41793 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__41754_41794 = managed_print_level_41789;\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__41754_41794);\n\ntry{devtools.formatters.state.update_current_state_BANG_((function (p1__41752_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__41752_SHARP_,null);\n}));\n\njob_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__41753_41793);\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^Q","~$devtools.format","^R","~$devtools.protocols","^S","~$devtools.formatters.state","^T","~$devtools.formatters.helpers","^U","~$cljs.core","^V","~$goog","^W"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^S","~$expandable?","^U","~$ITemplate","^S","~$IDevtoolsFormat","^R","~$get-managed-print-level","^T","~$get-current-state","^T","~$ISurrogate","^S","~$should-render?","^U","~$set-managed-print-level","^T","~$directly-printable?","^U","~$pref","^Q","~$push-object-to-current-history!","^T","~$update-current-state!","^T","~$abbreviated?","^U","~$IFormat","^S","~$*current-state*","^T","~$cljs-value?","^U","~$is-circular?","^T"],"^Z",["^ ","^H","^H","^V","^V","^Q","^Q"],"~:form",["~#list",["~$ns","^L",["^1C",["^Z",["^H","~:refer",["^G"]]]],["^1C",["^Y",["^Q","^1E",["^1:"]],["^R","^1E",["^13"]],["^S","^1E",["^12","^10","^16","^1>"]],["^T","^1E",["^1;","^1?","^15","^1A","^14","^18","^1<"]],["^U","^1E",["^1@","^11","^1=","^19","^17"]]]]]],"~:flags",["^ ","^Z",["^J",[]],"^Y",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^Q","^R","^S","^T","^U"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1609084281054,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer because pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.printing/markup?","value","cljs.core/meta","devtools.formatters.printing/mark-as-markup","cljs.core/with-meta","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","devtools.formatters.printing/build-markup","seq41689","G__41690","cljs.core/first","cljs.core/next","G__41691","self__4776__auto__","markup-db","fn-key","args","f","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/Error","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/wrap-value-as-reference-if-needed","or__4185__auto__","devtools.formatters.helpers/directly-printable?","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","devtools.formatters.printing/TemplateWriter","devtools.formatters.printing/->TemplateWriter","group","_","a","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","o","devtools.formatters.printing/make-template-writer","devtools.formatters.printing/already-reference?","temp__5733__auto__","tag","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/wrap-group-in-reference-if-needed","obj","cljs.core/not","devtools.formatters.helpers/expandable?","devtools.formatters.helpers/abbreviated?","expandable-markup","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","surrogate-markup","reference-markup","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","circular?","devtools.formatters.printing/wrap-group-in-meta-if-needed","p1__41700#","devtools.formatters.helpers/should-render?","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/detect-edge-case-and-patch-it","cljs.core/count","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/post-process-printed-output","output-group","devtools.formatters.printing/alt-printer-job","writer","opts","map__41734","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core/native-satisfies?","_e__41216__auto__","e41740","devtools.format/IDevtoolsFormat","e41744","devtools.protocols/IFormat","atomic-markup","default-impl","inner-opts","cljs.core/*print-level*","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","devtools.formatters.printing/alt-printer-impl","*current-state*-orig-val__41748","*current-state*-temp-val__41749","devtools.formatters.state/*current-state*","devtools.formatters.state/get-current-state","map__41750","devtools.formatters.state/is-circular?","inner-writer","devtools.formatters.state/push-object-to-current-history!","devtools.formatters.printing/managed-print","printer","devtools.prefs/pref","job-fn","managed-print-level","devtools.formatters.state/get-managed-print-level","*print-level*-orig-val__41753","*print-level*-temp-val__41754","p1__41752#","devtools.formatters.state/update-current-state!","devtools.formatters.state/set-managed-print-level","devtools.formatters.printing/managed-print-via-writer","cljs.core/pr-seq-writer","devtools.formatters.printing/managed-print-via-protocol","cljs.core/-pr-writer"]]],"~:cache-keys",["~#cmap",[["^1J","goog/dom/tagname.js"],[1604784567000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^1J","devtools/formatters/printing.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","^Q","^R","^S","^T","^U"]]],["^1J","devtools/formatters/helpers.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","^Q","~$devtools.munging","^R","^S"]]],["^1J","goog/math/math.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","~$goog.array","~$goog.asserts"]]],["^1J","goog/html/trustedtypes.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/labs/useragent/browser.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1J","goog/html/safeurl.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^25"]]],["^1J","goog/array/array.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22"]]],["^1J","goog/debug/error.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/dom/nodetype.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/string/typedstring.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/object/object.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/dom/asserts.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22"]]],"~:SHADOW-TIMESTAMP",[1604784577000,1604784558000],["^1J","goog/math/long.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","~$goog.reflect"]]],["^1J","goog/html/trustedresourceurl.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","~$goog.html.trustedtypes","^28","^29","^2:","^2;"]]],["^1J","goog/string/internal.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/functions/functions.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/html/safestyle.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","~$goog.html.SafeUrl","^2:","^2;","^25"]]],["^1J","goog/dom/safe.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2?","^27","~$goog.html.uncheckedconversions","^2:","^25"]]],["^1J","devtools/prefs.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","~$devtools.defaults"]]],["^1J","goog/structs/map.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1J","goog/html/safehtml.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","~$goog.dom.TagName","~$goog.dom.tags","^2C","^2D","~$goog.html.SafeStyleSheet","^2?","^27","^2>","^28","^29","~$goog.labs.userAgent.browser","^24","^2:","^2;","^25"]]],["^1J","goog/dom/tags.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^24"]]],["^1J","devtools/munging.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","~$clojure.string","~$devtools.context","^24","~$goog.string.StringBuffer"]]],["^1J","goog/asserts/asserts.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1J","goog/uri/uri.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1J","goog/i18n/bidi.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/fs/url.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/base.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",[]]],["^1J","goog/structs/structs.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^24"]]],["^1J","clojure/string.cljs"],[1604784558000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","^2R","^2O"]]],["^1J","devtools/formatters/state.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V"]]],["^1J","goog/string/string.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","~$goog.dom.safe","^2E","^2:","^25"]]],["^1J","goog/reflect/reflect.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/labs/useragent/util.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^25"]]],["^1J","goog/string/stringbuffer.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","goog/iter/iter.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","^2A","~$goog.math"]]],["^1J","goog/html/uncheckedconversions.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","^2B","^2C","^2D","^2K","^2?","^27","^2:","^25"]]],["^1J","devtools/defaults.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V"]]],["^1J","goog/dom/htmlelement.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W"]]],["^1J","cljs/core.cljs"],[1604784558000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["~$goog.math.Long","~$goog.math.Integer","^2R","^24","^21","~$goog.Uri","^2O"]]],["^1J","goog/html/safescript.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","^2>","^2:","^2;"]]],["^1J","devtools/context.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V"]]],["^1J","goog/html/safestylesheet.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","^2D","^24","^2:","^2;","^25"]]],["^1J","goog/math/integer.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^2="]]],["^1J","devtools/format.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V","^2N"]]],["^1J","goog/uri/utils.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^21","^22","^2R"]]],["^1J","goog/string/const.js"],[1604784567000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^22","^2;"]]],["^1J","devtools/protocols.cljs"],[1604784581000,"^1W",["^ ","^1X",null,"^1Y",["^J",[]],"^1Z",["^W","^V"]]]]],"~:clj-info",["^ ","jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1603736659000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1604769345000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/binaryage/devtools/0.9.11/devtools-0.9.11.jar!/devtools/oops.clj",1604784581000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1604784558000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1604784558000,"jar:file:/Users/abdullah/.m2/repository/binaryage/devtools/0.9.11/devtools-0.9.11.jar!/devtools/prefs.clj",1604784581000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1602769240000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/binaryage/devtools/0.9.11/devtools-0.9.11.jar!/devtools/defaults.clj",1604784581000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1602769240000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1602769240000,"jar:file:/Users/abdullah/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1604769345000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1602769240000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1604784558000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1602769241000,"jar:file:/Users/abdullah/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1602769240000,"jar:file:/Users/abdullah/.m2/repository/binaryage/devtools/0.9.11/devtools-0.9.11.jar!/devtools/munging.clj",1604784581000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"~:shadow/js-access-properties",["^J",["get-group","merge"]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W"],"^X",["^J",["^Y","^Z"]],"~:shadow/js-access-global",["^J",["Error"]],"^[",["^ ","^10","^S","^11","^U","^12","^S","^13","^R","^14","^T","^15","^T","^16","^S","^17","^U","^18","^T","^19","^U","^1:","^Q","^1;","^T","^1<","^T","^1=","^U","^1>","^S","^1?","^T","^1@","^U","^1A","^T"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^J",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1C",["~$quote",["^1C",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^J",["^40"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^3[",["^J",["^40","^41"]],"^K","~$devtools.formatters.printing/->TemplateWriter","^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1C",[["^46","^47"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"~:variadic?",false,"^42","^43","^7",31,"~:ret-tag","~$devtools.formatters.printing/TemplateWriter","^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^44",["^1C",["^45",["^1C",[["^46","^47"]]]]],"^48",["^J",["^40"]],"^49","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^44",["^1C",["^45",["^1C",[["~$obj","~$writer","~$opts"]]]]]],"^K","~$devtools.formatters.printing/alt-printer-impl","^6","devtools/formatters/printing.cljs","^:",23,"^4;",["^1C",[["^4D","^4E","^4F"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",112,"^9",112,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4D","^4E","^4F"]]]]]],"~$markup?",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^44",["^1C",["^45",["^1C",[["~$value"]]]]]],"^K","~$devtools.formatters.printing/markup?","^6","devtools/formatters/printing.cljs","^:",14,"^4;",["^1C",[["^4I"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",13,"^4?","~$any","^9",13,"^4A",1,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4I"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^44",["^1C",["^45",["^1C",[["^46","^4I","^47"]]]]]],"^K","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","^6","devtools/formatters/printing.cljs","^:",35,"^4;",["^1C",[["^46","^4I","^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",62,"^4?",["^J",[null,"~$cljs.core/IVector"]],"^9",62,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^46","^4I","^47"]]]]]],"~$mark-as-markup",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^44",["^1C",["^45",["^1C",[["^4I"]]]]]],"^K","~$devtools.formatters.printing/mark-as-markup","^6","devtools/formatters/printing.cljs","^:",21,"^4;",["^1C",[["^4I"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",16,"^4?",["^J",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",16,"^4A",1,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4I"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^44",["^1C",["^45",["^1C",[["^46","^4D","^47"]]]]]],"^K","~$devtools.formatters.printing/detect-edge-case-and-patch-it","^6","devtools/formatters/printing.cljs","^:",36,"^4;",["^1C",[["^46","^4D","^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",78,"^4?",["^J",[null,"^4N"]],"^9",78,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^46","^4D","^47"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^44",["^1C",["^45",["^1C",[["^46","^4D","^47"]]]]]],"^K","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","^6","devtools/formatters/printing.cljs","^:",40,"^4;",["^1C",[["^46","^4D","^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",48,"^4?",["^J",[null,"^4N"]],"^9",48,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^46","^4D","^47"]]]]]],"~$managed-print-via-writer",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^44",["^1C",["^45",["^1C",[["^4I","~$tag","^47"]]]]]],"^K","~$devtools.formatters.printing/managed-print-via-writer","^6","devtools/formatters/printing.cljs","^:",31,"^4;",["^1C",[["^4I","^4Y","^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",139,"^4?","~$cljs.core/LazySeq","^9",139,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4I","^4Y","^47"]]]]]],"~$already-reference?",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^44",["^1C",["^45",["^1C",[["^46"]]]]]],"^K","~$devtools.formatters.printing/already-reference?","^6","devtools/formatters/printing.cljs","^:",25,"^4;",["^1C",[["^46"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",44,"^4?",["^J",["~$boolean","^4S"]],"^9",44,"^4A",1,"^4B",true,"^44",["^1C",["^45",["^1C",[["^46"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^3[",["^J",["^40","^41"]],"^K","^4@","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^48",["^J",["^40"]]],"~$wrap-value-as-reference-if-needed",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^44",["^1C",["^45",["^1C",[["^47","^4I"]]]]]],"^K","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","^6","devtools/formatters/printing.cljs","^:",40,"^4;",["^1C",[["^47","^4I"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",24,"^4?",["^J",[null,"^4Q","^4R","^4S"]],"^9",24,"^4A",2,"^4B",true,"^44",["^1C",["^45",["^1C",[["^47","^4I"]]]]]],"~$managed-print-via-protocol",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^44",["^1C",["^45",["^1C",[["^4I","^4Y","^47"]]]]]],"^K","~$devtools.formatters.printing/managed-print-via-protocol","^6","devtools/formatters/printing.cljs","^:",33,"^4;",["^1C",[["^4I","^4Y","^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",143,"^4?","^4[","^9",143,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4I","^4Y","^47"]]]]]],"~$alt-printer-job",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^44",["^1C",["^45",["^1C",[["^4D","^4E","^4F"]]]]]],"^K","~$devtools.formatters.printing/alt-printer-job","^6","devtools/formatters/printing.cljs","^:",22,"^4;",["^1C",[["^4D","^4E","^4F"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",100,"^4?","^4K","^9",100,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4D","^4E","^4F"]]]]]],"~$make-template-writer",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^44",["^1C",["^45",["^1C",[["^47"]]]]]],"^K","~$devtools.formatters.printing/make-template-writer","^6","devtools/formatters/printing.cljs","^:",27,"^4;",["^1C",[["^47"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",39,"^4?","^4@","^9",39,"^4A",1,"^4B",true,"^44",["^1C",["^45",["^1C",[["^47"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^44",["^1C",["^45",["^1C",[["^46","^47","~$circular?"]]]]]],"^K","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","^6","devtools/formatters/printing.cljs","^:",47,"^4;",["^1C",[["^46","^47","^5B"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",57,"^4?",["^J",[null,"^4N"]],"^9",57,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^46","^47","^5B"]]]]]],"~$managed-print",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^44",["^1C",["^45",["^1C",[["^4Y","^47","~$printer"]]]]]],"^K","~$devtools.formatters.printing/managed-print","^6","devtools/formatters/printing.cljs","^:",20,"^4;",["^1C",[["^4Y","^47","^5E"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",123,"^4?","^4[","^9",123,"^4A",3,"^4B",true,"^44",["^1C",["^45",["^1C",[["^4Y","^47","^5E"]]]]]],"~$build-markup",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^44",["^1C",["^45",["^1C",[["^47","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^4>",true,"~:fixed-arity",2,"^4A",2,"^4;",[["^1C",["^47","^5H","^5I"]]],"^44",["^1C",[["^47","^5H","~$&","^5I"]]],"^4=",["^1C",[null]]]],"^K","~$devtools.formatters.printing/build-markup","^6","devtools/formatters/printing.cljs","^:",19,"^5J",["^ ","^4>",true,"^5K",2,"^4A",2,"^4;",[["^1C",["^47","^5H","^5I"]]],"^44",["^1C",[["^47","^5H","~$&","^5I"]]],"^4=",["^1C",[null]]],"^4;",[["^1C",["^47","^5H","^5I"]]],"^4<",null,"^5K",2,"^4=",["^1C",[null]],"^8",1,"^4>",true,"~:methods",[["^ ","^5K",2,"^4>",true,"^57",["^J",["^4Q","^4R","^4S"]]]],"^7",19,"^4?","^4K","^9",19,"^4A",2,"^4B",true,"^44",["^1C",[["^47","^5H","~$&","^5I"]]]],"~$post-process-printed-output",["^ ","^3Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^44",["^1C",["^45",["^1C",[["~$output-group","^4D","^47","^5B"]]]]]],"^K","~$devtools.formatters.printing/post-process-printed-output","^6","devtools/formatters/printing.cljs","^:",34,"^4;",["^1C",[["^5O","^4D","^47","^5B"]]],"^4<",null,"^4=",["^1C",[null,null]],"^8",1,"^4>",false,"^7",91,"^4?",["^J",[null,"^4N"]],"^9",91,"^4A",4,"^4B",true,"^44",["^1C",["^45",["^1C",[["^5O","^4D","^47","^5B"]]]]]]],"^Z",["^ ","^H","^H","^V","^V","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^X",["^J",["~:render-metas","~:else","~:max-header-elements","^46","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^47","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^68","^5Z","^46","^65","^47","^63","^5W","^64","^60","^62","^5R","^5V","^5X","^5S","^5Y","^67","^5U","^61","^66","^5[","^5T"]],"^1F",["^ ","^Z",["^J",[]],"^Y",["^J",[]]],"^1G",["^ "],"^1H",["^W","^V","^Q","^R","^S","^T","^U"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1V",[["^6<","~:static-fns"],true,["^6<","~:shadow-tweaks"],null,["^6<","~:elide-asserts"],false,["^6<","~:optimize-constants"],null,["^6<","^1M"],null,["^6<","~:external-config"],null,["^6<","~:tooling-config"],null,["^6<","~:emit-constants"],null,["^6<","~:load-tests"],null,["^6<","~:form-size-threshold"],null,["^6<","~:infer-externs"],true,["^6<","^1O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6<","~:fn-invoke-direct"],null,["^6<","~:source-map"],"/dev/null"]]]